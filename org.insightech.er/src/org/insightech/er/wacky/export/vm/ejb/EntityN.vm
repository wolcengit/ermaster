package ${ejbPackage};

#if(${EmbeddedId})
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
#end
import javax.persistence.Column;
#if(${EmbeddedId})
import javax.persistence.EmbeddedId;
#end
import javax.persistence.Entity;
#if(!${EmbeddedId})
import javax.persistence.Id;
import javax.persistence.IdClass;
#end
import javax.persistence.Table;

#foreach (${packge} in ${tableAllPackages}) 
import ${packge};
#end
#if($table.isSupportI18n())
import java.util.Locale;
#end
 
/**
 * 实体：${tableEntity} 
 * ${tableDescript}  
 * 
 * @author wacky for ermaster
 */
${tablePKDescript}
@Entity
@Table(name = "$table.getName()")
#if(!${EmbeddedId})
@IdClass(${tableEntity}${IdSuffix}.class)
#end
#if($table.isSupportSync())
@TableSynch
#end
#if($table.isSupportEmergency())
@TableEmergency
#end
public class ${tableEntity} implements java.io.Serializable,Cloneable {

	private static final long serialVersionUID = 1L;

	// 字段
#foreach (${column} in ${tableNotPkColumns}) 
	// $column.getDescript()
	@Column($column.getColumnAnnotation())
	#if(${ColumnDefult} && $column.hasDefault())
	@ColumnDefault(value="$column.getDefault()") 
	#end
	private $column.getJavaClass() $column.getName();
#end
#if(${EmbeddedId})
	@EmbeddedId
	@AttributeOverrides({
	$table.getAttributeOverrides()
			})
	private ${tableEntity}${IdSuffix} ${IdSuffixVar};
#else
#foreach (${column} in ${tablePkColumns}) 
	// $column.getDescript()
#if($column.isPk())
	@Id 
#end
	@Column($column.getColumnAnnotation())
	#if(${ColumnDefult} && $column.hasDefault())
	@ColumnDefault(value="$column.getDefault()") 
	#end
	private $column.getJavaClass() $column.getName();
#end
#end
	
	// 构造
	/** 缺省构造 */
	public ${tableEntity}() {
	}
	
	/** 主键构造 */
	public ${tableEntity}(${tableEntity}${IdSuffix} ${IdSuffixVar}) {
#if(${EmbeddedId})
		this.${IdSuffixVar} = ${IdSuffixVar};
#else
		if(${IdSuffixVar} == null) return;
#foreach (${column} in ${tablePkColumns}) 
		this.$column.getName() = ${IdSuffixVar}.get$column.getCapitalName()();
#end
#end
	}

	/** 完全构造 */
	public ${tableEntity}($table.getAllParametersNoSec()) {
#foreach (${column} in ${tableNotPkColumnsNoSec}) 
		this.$column.getName() = $column.getName();
#end
#if(${EmbeddedId})
		this.${IdSuffixVar} = new ${tableEntity}${IdSuffix}();
#foreach (${column} in ${tablePkColumns}) 
		this.${IdSuffixVar}.set$column.getCapitalName()($column.getName());
#end
#else
#foreach (${column} in ${tablePkColumns}) 
		this.$column.getName() = $column.getName();
#end
#end
	}


	// 属性 
#if(${EmbeddedId})
#foreach (${column} in ${tableNotPkColumns}) 
	public $column.getJavaClass() get$column.getCapitalName()() {
		return this.$column.getName();
	}

	public void set$column.getCapitalName()($column.getJavaClass() $column.getName()) {
		this.$column.getName() = $column.getName();
	}
#end

	public ${tableEntity}${IdSuffix} get${IdSuffixName}() {
		return this.${IdSuffixVar};
	}

	public void set${IdSuffixName}(${tableEntity}${IdSuffix} ${IdSuffixVar}) {
		this.${IdSuffixVar} = ${IdSuffixVar};
	}
	
#else
#foreach (${column} in ${tableAllColumns}) 
	public $column.getJavaClass() get$column.getCapitalName()() {
		return this.$column.getName();
	}

	public void set$column.getCapitalName()($column.getJavaClass() $column.getName()) {
		this.$column.getName() = $column.getName();
	}
#end

	public ${tableEntity}${IdSuffix} get${IdSuffixName}() {
		${tableEntity}${IdSuffix} ${IdSuffixVar} = new ${tableEntity}${IdSuffix}();
#foreach (${column} in ${tablePkColumns}) 
		${IdSuffixVar}.set$column.getCapitalName()($column.getName());
#end
		return ${IdSuffixVar};
	}

	public void set${IdSuffixName}(${tableEntity}${IdSuffix} ${IdSuffixVar}) {
		if(${IdSuffixVar} == null) return;
#foreach (${column} in ${tablePkColumns}) 
		this.$column.getName() = ${IdSuffixVar}.get$column.getCapitalName()();
#end
	}
#end

	public Object clone() {
		Object inst = null;
		try{
			inst = super.clone();
		}catch (Exception e) {
			e.printStackTrace();
		}
		return inst;
	}
#if($table.isSupportI18n())
	public String getI18nDescript(){
		if (Locale.SIMPLIFIED_CHINESE.equals(Locale.getDefault())) {
			return getDescript();
		} else if (Locale.ENGLISH.equals(Locale.getDefault())) {
			return getDescript1();
		} else {
			return getDescript2();
		}
	}
#end
}
