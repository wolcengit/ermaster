package com.foxhis.entity.processer;
import com.foxhis.entity.*;
import com.foxhis.entity.ejbutil.*;
import com.foxhis.pms.biz.FoxPublicBiz;
import com.foxhis.utils.FoxValidateUtil;
import com.foxhis.utils.FoxDesensitizedUtil;
import com.foxhis.utils.SessionUtils;
import org.apache.commons.lang.StringUtils;
import javax.ejb.Local;
import javax.ejb.Stateless;
import java.util.Date;
import java.util.Objects;
import java.util.List;
import java.util.ArrayList;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@Stateless(name="$tableName.toLowerCase()")
@Local(FoxSecurityEntityProcesser.class)
public class ${tableName}_SecurityEntityProcesser extends AbstractFoxSecurityEntityProcesser<${originTable}, ${secTable}> {

    @Override
    public FoxSecurityEntityProcesserResponse<${originTable}, ${secTable}> beforeSave(${originTable} ent) {
        int process = 0;
        ObjFacadeBase objFacadeBase = EjbFacadeUtil.getFacadeLocal(ObjFacadeBase.class);
#if($tablePkColumns.size() == 1)
        ${secTable} secent = ($secTable) objFacadeBase.findById(${tableEntity}.class, ent.get$tablePk.getCapitalName()());
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk = new ${secTable}_PK();
#foreach (${column} in ${tablePkColumns})
        secpk.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
        ${secTable} secent = (${secTable}) objFacadeBase.findById(${secTable}.class, secpk);
#end
        boolean isNew = false;
        if (secent == null) {
#if(${originTable} == ${secTable})
            secent = ent;
#else
            isNew = true;
            secent = new ${secTable}();
#foreach (${column} in ${tablePkColumns})
            secent.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
#end
            secent.setCby(SessionUtils.getEmpno());
            secent.setChanged(new Date());     
        }
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()})
        // sec_${co}
        String nencSec${cu} = FoxSecurityHelper.encode(ent.get${cu}());
        String oencSec${cu} = secent.getSec_${co}();
        if(!Objects.equals(oencSec${cu},nencSec${cu})) {
            secent.setSec_${co}(nencSec${cu});
            process++;
        }
#end
#end
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(${securityColumn.isQry()})
        // qry_${co}
#set($maxSizeLength=${securityColumn.getLength()}/25)
		String qry${cu} = ent.get${cu}();
		if(StringUtils.isNotBlank(qry${cu}) && qry${cu}.length() > $maxSizeLength){
			qry${cu} = qry${cu}.substring(0, $maxSizeLength);	
		}
        String nencQry${cu} = FoxSecurityHelper.encodeForQueryColumn(qry${cu});
        String oencQry${cu} = secent.getQry_${co}();
        if(!Objects.equals(oencQry${cu},nencQry${cu})) {
            secent.setQry_${co}(nencQry${cu});
            process++;
        }
#end
#end

        FoxSecurityEntityProcesserResponse<${originTable}, ${secTable}> response = new FoxSecurityEntityProcesserResponse<>();
        response.setEntity(ent);
        response.setSecEntity(secent);
        response.setExist(!isNew);
        response.setModified(process > 0);
        return response;
    }


    @Override
    public Object afterRetrieve(${originTable} ent) {
#if(${originTable} == ${secTable})
		${secTable} secent = ent;
#else
        ObjFacadeBase objFacadeBase = EjbFacadeUtil.getFacadeLocal(ObjFacadeBase.class);
#if($tablePkColumns.size() == 1)
        ${secTable} secent = ($secTable) objFacadeBase.findById(${tableEntity}.class, ent.get$tablePk.getCapitalName()());
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk = new ${secTable}_PK();
#foreach (${column} in ${tablePkColumns})
        secpk.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
        ${secTable} secent = (${secTable}) objFacadeBase.findById(${secTable}.class, secpk);
#end
#end
        if (secent == null) {
            return ent;
        }
        ${originTable} cloneEntity = (${originTable})ent.clone();
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()})
        // sec_${co}
        if (StringUtils.isNotBlank(secent.getSec_${co}())) {
            cloneEntity.set${cu}(FoxSecurityHelper.decode(secent.getSec_${co}()));
#if(${originTable} == ${secTable})
			cloneEntity.setSec_${co}("");
#if(${securityColumn.isQry()})	
			cloneEntity.setQry_${co}("");
#end
#end
        }
#end
#end
        return cloneEntity;
    }
    
    @Override
    public List<${originTable}> afterRetrieve(List ents) {
    	if (ents == null || ents.isEmpty()) {
            return ents;
        }
        List<${originTable}> newList = new ArrayList(ents.size());
#if(${originTable} == ${secTable})
		for(Object ent : ents){
			if(ent == null){
				continue;
			}
			${originTable} entity = ((${originTable})ent);
			${originTable} cloneEntity = (${originTable})entity.clone();
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()})
        // sec_${co}
        	if (StringUtils.isNotBlank(cloneEntity.getSec_${co}())) {
            	cloneEntity.set${cu}(FoxSecurityHelper.decode(cloneEntity.getSec_${co}()));
				cloneEntity.setSec_${co}("");
#if(${securityColumn.isQry()})	
				cloneEntity.setQry_${co}("");
#end
        	}
        	newList.add(cloneEntity);
#end
#end			
		}        
#else
	    SQLFacadeBase sqlFacadeBase = EjbFacadeUtil.getFacadeLocal(SQLFacadeBase.class);
	    QueryParameters parameters = new QueryParameters(false);
#set($pkColConditions = "")
#set($selPkColumns = "")
#set($resultPkKey = "")
#set($columnIndex = 0)
#foreach (${column} in ${tablePkColumns})
	#set($originColumn = ${column.getName()})
	#set($selPkColumns = $selPkColumns + $originColumn)
	#set($pkColConditions = $pkColConditions + "?")
	#set($resultPkKey = $resultPkKey + "result["+$columnIndex+"].toString()")
	#set($columnIndex = $columnIndex + 1)
	#if($foreach.hasNext)
		#set($selPkColumns = $selPkColumns + ",")
		#set($pkColConditions = $pkColConditions + ",")
		#set($resultPkKey = $resultPkKey + "+""-""+")
	#end
#end

#set($selColumns = $selPkColumns)
#foreach (${column} in ${securityColumns})
#if(!${column.isQry()})
#set($selColumns = $selColumns + ",")
#set($selColumns = $selColumns + ${column.getName()})
#end
#end
		String sql = "select ${selColumns} from ${secTable.toLowerCase()} where ($selPkColumns) in (";
		int index = 1;
		for (Object ent : ents){
			sql += "(${pkColConditions}),";
#foreach (${column} in ${tablePkColumns})
			parameters.addParameter(index++, ((${originTable})ent).get${column.getCapitalName()}());
#end
		}
		sql = sql.substring(0, sql.length()-1);
		sql += ") ";
		List<Object[]> results = sqlFacadeBase.getResultList(sql, parameters);
		Map<String, Object[]> matchingResultMap = new HashMap<>();
		if (results != null){
			for(Object[] result : results){
				matchingResultMap.put($resultPkKey, result);
			}
		}
		boolean encrypted = false;
		for (Object ent : ents){
			if (ent == null){
				continue;
			}
			${originTable} entity = ((${originTable})ent);
#set($resultSecColumnIndex = $columnIndex)
#set($entPkKey = "")
#foreach (${column} in ${tablePkColumns})
#set($entPkKey = $entPkKey + "entity.get${column.getCapitalName()}()")
#if($foreach.hasNext)
#set($entPkKey = $entPkKey + "+""-""+")
#end
#end
			Object[] secResult = matchingResultMap.get($entPkKey);	
			encrypted = secResult != null && secResult.length > 0;
			${originTable} cloneEntity = (${originTable})entity.clone();
#foreach (${securityColumn} in ${securityColumns})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()})
        	// sec_${cu.toLowerCase()}
        	if (encrypted && StringUtils.isNotBlank((String)secResult[$resultSecColumnIndex])) {
            	cloneEntity.set${cu}(FoxSecurityHelper.decode(secResult[$resultSecColumnIndex]));
        	} else {
        	    cloneEntity.set${cu}("");
        	}
#set($resultSecColumnIndex = $resultSecColumnIndex+1)
#end
#end
        	newList.add(cloneEntity);			
		}
			
#end
		return newList;
    }

    @Override
    public ${originTable} desensitize(${originTable} entity) {
#if(${originTable} == ${secTable})
		${originTable} cloneEntity = entity;
#else
		${originTable} cloneEntity = (${originTable})entity.clone();
#end 
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#set($cc = ","+${securityColumn.getOriginColumn()}+",")
#set($cc1 = ",name,name1,name2,name4,contactor,guestname,empnoname,saleid_name,cusname,cusno_des,agent_des,source_des,group_des,groupno_des,receipname,cby_name,")
#set($cc1_1 = ",applname,usename,accntname,invoicename,accntname1,workername,empname,reportname,pmsname,attname,attname2,cbyname,unitname,htlname,owner_name,guide_name,dsb_name,")
#set($cc1_2 = ",contractname,holdname,signname,invoicename,hname,haccntname,signname2,guest_name,haccnt_des,wokername,reportname,pmsname,ename,contractname,")
#set($cc2 = ",mobile,phone,contact_mobile,contactor_mobile,tele_phone,addressee,receipmobile,applymobile,usemobile,accept_mobile,warning_mobile,reviewer_mobile,dsb_mobile,")
#set($cc2_1 = ",guest_phone,linkmobile,wlmobile,cplman_phone,accept_mobile,cplperson,")
#set($cc3 = ",tel,telephone,")
#set($cc4 = ",email,receipemail,contact_email,")
#set($cc5 = ",address,address2,street,mailing_address,guest_address,")
#set($cc6 = ",bankcode,")
#set($cc7 = ",fname,")
#if(!$securityColumn.isQry())
		// sec_${co}
#if("ident" == ${co})        
        if (StringUtils.isNotBlank(cloneEntity.getIdent())) {
            cloneEntity.setIdent(FoxDesensitizedUtil.idCardNumByXR(cloneEntity.getIdent()));
        }
#elseif($cc1.contains(${cc}) || $cc1_1.contains(${cc}) || $cc1_2.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.chineseName(cloneEntity.get${cu}()));
        }
#elseif($cc2.contains(${cc}) || $cc2_1.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.mobilePhone(cloneEntity.get${cu}()));
        }
#elseif($cc3.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.fixedPhone(cloneEntity.get${cu}()));
        }
#elseif($cc4.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.email(cloneEntity.get${cu}()));
        }
#elseif($cc5.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.address(cloneEntity.get${cu}()));
        }
#elseif($cc6.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.bankCard(cloneEntity.get${cu}()));
        }
#elseif($cc7.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.desensitize(cloneEntity.get${cu}(), 0));
        }
#end
#end
#end    
        return cloneEntity;
    }
}
