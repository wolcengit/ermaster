package com.foxhis.entity.processer;

import com.foxhis.entity.${originTable};
#if($tablePkColumns.size() > 1)
import com.foxhis.entity.${tableEntity}_PK;
#end
import com.foxhis.entity.${tableEntity};
import com.foxhis.entity.ejbutil.*;
import com.foxhis.pms.biz.FoxPublicBiz;
import com.foxhis.utils.FoxValidateUtil;
import com.foxhis.utils.FoxDesensitizedUtil;
import com.foxhis.utils.SessionUtils;
import org.apache.commons.lang.StringUtils;

import javax.ejb.Local;
import javax.ejb.Stateless;
import java.util.Date;
import java.util.Objects;

@Stateless(name="$tableEntity.toLowerCase()")
@Local(FoxSecurityEntityProcesser.class)
public class ${tableName}_SecurityEntityProcesser extends AbstractFoxSecurityEntityProcesser<${originTable}, ${secTable}> {

    @Override
    public FoxSecurityEntityProcesserResponse<${originTable}, ${secTable}> beforeSave(${originTable} ent) {
        int process = 0;
		// 判断是否有值需要处理
        ObjFacadeBase objFacadeBase = EjbFacadeUtil.getFacadeLocal(ObjFacadeBase.class);
#if($tablePkColumns.size() == 1)
#foreach (${column} in ${tablePkColumns}) 
        ${secTable} secent = ($secTable) objFacadeBase.findById(${tableEntity}.class, ent.get$column.getCapitalName()());
#end
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk = new ${secTable}_PK();
#foreach (${column} in ${tablePkColumns}) 
        secpk.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
        ${secTable} secent = (${secTable}) objFacadeBase.findById(${secTable}.class, secpk);
#end  
        boolean isNew = false;
        if (secent == null) {
            isNew = true;
#if(${originTable} == ${secTable})
            secent = (${originTable})ent.clone();
#else
			secent = new ${secTable}();
#foreach (${column} in ${tablePkColumns}) 
        	secent.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
#end
			secent.setCby(SessionUtils.getEmpno());
            secent.setChanged(new Date());     
        }
#foreach (${securityColumn} in ${securityColumns})
		// ${securityColumn.getOriginColumn()}
		if(StringUtils.isNotBlank(ent.get${securityColumn.getOriginColumnCapitalName()}())){
			String ${securityColumn.getOriginColumn()} = ent.get${securityColumn.getOriginColumnCapitalName()}();
#if(${securityColumn.isQry()})
#set($maxSizeLength=${securityColumn.getLength()}/25)
			if(ent.get${securityColumn.getOriginColumnCapitalName()}().length() > $maxSizeLength){
				${securityColumn.getOriginColumn()} = ${securityColumn.getOriginColumn()}.substring(0, $maxSizeLength);	
			}
#end
			String encode${securityColumn.getOriginColumnCapitalName()} = FoxSecurityHelper.encodeForQueryColumn(${securityColumn.getOriginColumn()});
			if (!Objects.equals(secent.get${securityColumn.getCapitalName()}(), encode${securityColumn.getOriginColumnCapitalName()})) {
				secent.set${securityColumn.getCapitalName()}(FoxSecurityHelper.encode(encode${securityColumn.getOriginColumnCapitalName()}));	
				process++;			
			}	
		} else if (!isNew) {
			secent.set${securityColumn.getCapitalName()}("");	
            process++;			
		}
#end
	
        FoxSecurityEntityProcesserResponse<${originTable}, ${secTable}> response = new FoxSecurityEntityProcesserResponse<>();
        response.setEntity(ent);
        response.setSecEntity(secent);
        response.setExist(!isNew);
        response.setModified(process > 0);
        return response;
    }
    

    @Override
    public Object afterRetrieve(${originTable} ent) {
        // 判断是否有值需要处理
        ObjFacadeBase objFacadeBase = EjbFacadeUtil.getFacadeLocal(ObjFacadeBase.class);
#if($tablePkColumns.size() == 1)
#foreach (${column} in ${tablePkColumns}) 
        ${secTable} secent = ($secTable) objFacadeBase.findById(${tableEntity}.class, ent.get${column.getCapitalName()}());
#end
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk = new ${secTable}_PK();
#foreach (${column} in ${tablePkColumns}) 
        secpk.set${column.getCapitalName()}(ent.get${column.getCapitalName()}());
#end
        ${secTable} secent = (${secTable}) objFacadeBase.findById(${secTable}.class, secpk);
#end  
        if (secent == null) {
            return ent;
        }
        ${originTable} cloneEntity = (${originTable})ent.clone();
#foreach (${securityColumn} in ${securityColumns})
#if(${securityColumn.isSec()})
		// ${securityColumn.getOriginColumn()}
		if (StringUtils.isNotBlank(secent.get${securityColumn.getCapitalName()}())){
			ent.set${securityColumn.getOriginColumnCapitalName()}(FoxSecurityHelper.decode(secent.get${securityColumn.getCapitalName()}()));
		}	
#end
#end	
        return cloneEntity;
    }

    @Override
    public ${originTable} desensitize(${originTable} entity) {
    	${originTable} cloneEntity = (${originTable})entity.clone();
#foreach (${securityColumn} in ${securityColumns})
#if(${securityColumn.isSec()})    	
#if(${securityColumn.getOriginColumn} == "ident")
        //indent
        if (StringUtils.isNotBlank(cloneEntity.getIdent())){
            cloneEntity.setIdent(FoxDesensitizedUtil.idCardNumByXR(cloneEntity.getIdent()));
        }
#elseif(${securityColumn.getOriginColumn()} == "name" || ${securityColumn.getOriginColumn()} == "name2" || ${securityColumn.getOriginColumn()} == "name4" || ${securityColumn.getOriginColumn()} == "fname" || ${securityColumn.getOriginColumn()} == "contactor" || ${securityColumn.getOriginColumn()} == "guestname" || ${securityColumn.getOriginColumn()} == "empnoname" || ${securityColumn.getOriginColumn()} == "saleid_name" || ${securityColumn.getOriginColumn()} == "cusname" || ${securityColumn.getOriginColumn()} == "cusno_des" || ${securityColumn.getOriginColumn()} == "agent_des" || ${securityColumn.getOriginColumn()} == "source_des" || ${securityColumn.getOriginColumn()} == "group_des" || ${securityColumn.getOriginColumn()} == "groupno_des")
    	// ${securityColumn.getOriginColumn()}
        if (StringUtils.isNotBlank(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}())){
            cloneEntity.set${securityColumn.getOriginColumnCapitalName()}(FoxDesensitizedUtil.chineseName(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}()));
        }
#elseif(${securityColumn.getOriginColumn()} == "mobile" || ${securityColumn.getOriginColumn()} == "phone" || ${securityColumn.getOriginColumn()} == "contact_mobile" || ${securityColumn.getOriginColumn()} == "tele_phone")
    	// ${securityColumn.getOriginColumn()}
        if (StringUtils.isNotBlank(entity.get${securityColumn.getOriginColumnCapitalName()}()) && FoxValidateUtil.isPhone(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}())){
            cloneEntity.set${securityColumn.getOriginColumnCapitalName()}(FoxDesensitizedUtil.mobilePhone(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}()));
        }
#elseif(${securityColumn.getOriginColumn()} == "tel")
    	// ${securityColumn.getOriginColumn()}
        if (StringUtils.isNotBlank(entity.get${securityColumn.getOriginColumnCapitalName()}()) && FoxValidateUtil.isTelephone(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}())){
            cloneEntity.set${securityColumn.getOriginColumnCapitalName()}(FoxDesensitizedUtil.fixedPhone(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}()));
        } 
#elseif(${securityColumn.getOriginColumn()} == "email")
    	// ${securityColumn.getOriginColumn()}
        if (StringUtils.isNotBlank(entity.get${securityColumn.getOriginColumnCapitalName()}()) && FoxValidateUtil.isEmail(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}())){
            cloneEntity.set${securityColumn.getOriginColumnCapitalName()}(FoxDesensitizedUtil.email(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}()));
        }  
#elseif(${securityColumn.getOriginColumn()} == "address" || ${securityColumn.getOriginColumn()} == "street")
    	// ${securityColumn.getOriginColumn()}
        if (StringUtils.isNotBlank(entity.get${securityColumn.getOriginColumnCapitalName()}())){
            cloneEntity.set${securityColumn.getOriginColumnCapitalName()}(FoxDesensitizedUtil.address(cloneEntity.get${securityColumn.getOriginColumnCapitalName()}()));
        }    	
#end    	
#end
#end    	
        return cloneEntity;
    }
}