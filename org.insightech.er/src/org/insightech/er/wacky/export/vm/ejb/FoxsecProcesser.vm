package com.foxhis.entity.processer;
import com.foxhis.entity.*;
import com.foxhis.entity.ejbutil.*;
import com.foxhis.pms.biz.FoxPublicBiz;
import com.foxhis.utils.FoxValidateUtil;
import com.foxhis.utils.FoxDesensitizedUtil;
import com.foxhis.utils.SessionUtils;
import org.apache.commons.lang.StringUtils;
import javax.ejb.Local;
import javax.ejb.Stateless;
import java.util.Date;
import java.util.Objects;
import java.util.List;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@Stateless(name="$tableName.toLowerCase()")
@Local(FoxSecurityEntityProcesser.class)
public class ${tableName}_SecurityEntityProcesser extends AbstractFoxSecurityEntityProcesser<${originTable}, ${secTable}> {
#set($cc1 = ",name,name1,name2,name4,contactor,guestname,empnoname,saleid_name,cusname,cusno_des,agent_des,source_des,group_des,groupno_des,receipname,cby_name,")
#set($cc1_1 = ",applname,usename,accntname,invoicename,accntname1,workername,empname,reportname,pmsname,attname,attname2,cbyname,unitname,htlname,owner_name,guide_name,dsb_name,")
#set($cc1_2 = ",contractname,holdname,signname,invoicename,hname,haccntname,signname2,guest_name,haccnt_des,worker,wokername,reportname,pmsname,ename,contractname,salename,resname,")
#set($cc1_3 = ",collector,contacter,res_name,groupname,resbyname,competitor_name,realname,sourcename,agentname,cplperson,")
#set($cc2 = ",mobile,phone,contact_mobile,contactor_mobile,tele_phone,addressee,receipmobile,applymobile,usemobile,accept_mobile,warning_mobile,reviewer_mobile,dsb_mobile,")
#set($cc2_1 = ",guest_phone,linkmobile,wlmobile,cplman_phone,accept_mobile,receiver,")
#set($cc3 = ",tel,telephone,")
#set($cc4 = ",email,receipemail,contact_email,")
#set($cc5 = ",address,address2,street,mailing_address,guest_address,address1,")
#set($cc6 = ",bankcode,")
#set($cc7 = ",fname,")
#set($cc8 = ",sex,sex_des,race,race_des,")

    @Override
    public boolean processed(Serializable pk){
    	String sql = "select 1 from ${secTable.toLowerCase()} where ";
	    QueryParameters parameters = new QueryParameters();
#if($tablePkColumns.size() == 1)
		sql+= " $tablePk=:$tablePk ";
		parameters.addParameter("$tablePk", pk);
#elseif($tablePkColumns.size() > 1)
        ${originTable}_PK entityPk = (${originTable}_PK)pk;
#set($index = 0)    
#foreach (${column} in ${tablePkColumns})
       	sql+= "#if($index > 0) and #end ${column.getName()}=:${column.getName()} ";
		parameters.addParameter("${column.getName()}", entityPk.get${column.getCapitalName()}());
#set($index = $index+1)    
#end
#end
#foreach (${securityColumn} in ${securityColumns})
#if(!${securityColumn.isQry()} && !${securityColumn.isLastQry()})
		sql+= " and sec_${securityColumn.getOriginColumn()} is not null ";
#end
#end
		SQLFacadeBase sqlFacadeBase = EjbFacadeUtil.getFacadeLocal(SQLFacadeBase.class);
		Object ret = sqlFacadeBase.getSingleResult(sql, parameters);		
		return Objects.equals(ret, 1);
    }
    
    @Override
    public FoxSecurityEntityProcesserResponse<${originTable}, ${secTable}> beforeSave(${originTable} ent, boolean forceSecEntity) {
        int process = 0;
        Serializable entityPk = null;
        FoxSecurityEntityProcesserResponse<${originTable}, ${secTable}> response = new FoxSecurityEntityProcesserResponse<>();
        response.setOriginEntity((${originTable})(ent.clone()));
#if($tablePkColumns.size() == 1)
		entityPk = ent.get$tablePk.getCapitalName()();
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk = new ${secTable}_PK();
#foreach (${column} in ${tablePkColumns})
        secpk.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
		entityPk = secpk;
#end
        ${secTable} oldSecent = forceSecEntity ? null : getSecEntity(${secTable}.class, entityPk);

		boolean isNew = false;
#if(${originTable} == ${secTable})
		${secTable} secent = ent;
#else
		${secTable} secent = oldSecent == null ? null : (${secTable})(oldSecent.clone());
		if (secent == null) {
			isNew = true;
            secent = createSecEntity(entityPk);    
        }
#end
        
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()} && !${securityColumn.isLastQry()})
		// sec_${co}
#if((${originTable} == "Master" || ${originTable} == "Hmaster") && (${co} == "name" || ${co} == "fname" || ${co} == "lname"))
        if (Objects.equals(ent.getCat(), "F")){
        	String nencSec${cu} = StringUtils.isBlank(ent.get${cu}()) ? "" : FoxSecurityHelper.encode(ent.get${cu}());
        	String oencSec${cu} = (oldSecent == null || StringUtils.isBlank(oldSecent.getSec_${co}()))  ? "" : oldSecent.getSec_${co}();
        	secent.setSec_${co}(nencSec${cu});
        	if(!Objects.equals(oencSec${cu},nencSec${cu})) {
            	process++;
			}
        } else {
        	secent.setSec_${co}("");
        }
#elseif((${originTable} == "Guest") && ((${co} == "name" || ${co} == "fname" || ${co} == "lname")))
		if (Objects.equals(ent.getCls(), "F")){
        	String nencSec${cu} = StringUtils.isBlank(ent.get${cu}()) ? "" : FoxSecurityHelper.encode(ent.get${cu}());
        	String oencSec${cu} = (oldSecent == null || StringUtils.isBlank(oldSecent.getSec_${co}()))  ? "" : oldSecent.getSec_${co}();
        	secent.setSec_${co}(nencSec${cu});
        	if(!Objects.equals(oencSec${cu},nencSec${cu})) {
            	process++;
			}
		} else {
        	secent.setSec_${co}("");
        }
#else
		String nencSec${cu} = StringUtils.isBlank(ent.get${cu}()) ? "" : FoxSecurityHelper.encode(ent.get${cu}());
        String oencSec${cu} = (oldSecent == null || StringUtils.isBlank(oldSecent.getSec_${co}()))  ? "" : oldSecent.getSec_${co}();
        secent.setSec_${co}(nencSec${cu});
        if(!Objects.equals(oencSec${cu},nencSec${cu})) {
            process++;
		}
#end			
#end
#end
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#set($cc = ","+${securityColumn.getOriginColumn()}+",")
#if(${securityColumn.isQry()})

        // qry_${co}
#set($maxSizeLength=${securityColumn.getLength()}/25)
		String qry${cu} = ent.get${cu}() == null ? "" : ent.get${cu}();
		if(qry${cu}.length() > $maxSizeLength){
			qry${cu} = qry${cu}.substring(0, $maxSizeLength);	
		}
#if("ident" == ${co})        
        String nencQry${cu} = FoxSecurityHelper.encodeForQueryIdentColumn(qry${cu});
#elseif($cc2.contains(${cc}) || $cc2_1.contains(${cc})) 
		String nencQry${cu} = FoxSecurityHelper.encodeForQueryMobileColumn(qry${cu});
#else
		String nencQry${cu} = FoxSecurityHelper.encodeForNormalQueryColumn(qry${cu});
#end
        String oencQry${cu} = oldSecent == null ? null : oldSecent.getQry_${co}();
        secent.setQry_${co}(nencQry${cu});
        if(!Objects.equals(oencQry${cu},nencQry${cu})) {
            process++;
		}
#end
#end

        response.setEntity(ent);
        response.setSecEntity(secent);
        response.setExist(!isNew);
        response.setModified(process > 0);
        return response;
    }


    @Override
    public Object afterRetrieve(${originTable} ent) {
#if(${originTable} == ${secTable})
		${secTable} secent = ent;
#else
        Serializable entityPk = null;
#if($tablePkColumns.size() == 1)
		entityPk = ent.get$tablePk.getCapitalName()();
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk = new ${secTable}_PK();
#foreach (${column} in ${tablePkColumns})
        secpk.set$column.getCapitalName()(ent.get$column.getCapitalName()());
#end
		entityPk = secpk;
#end
        ${secTable} secent = getSecEntity(${secTable}.class, entityPk);

#end
        if (secent == null) {
            return ent;
        }
        ${originTable} cloneEntity = (${originTable})ent.clone();
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()} && !${securityColumn.isLastQry()})
        // sec_${co}
        if (StringUtils.isNotBlank(secent.getSec_${co}())) {
            cloneEntity.set${cu}(FoxSecurityHelper.decode(secent.getSec_${co}()));
#if(${originTable} == ${secTable})
			cloneEntity.setSec_${co}("");
#if(${securityColumn.isQry()})	
			cloneEntity.setQry_${co}("");
#end
#if(${securityColumn.isLastQry()})	
			cloneEntity.setLast_qry_${co}("");
#end
#end
        }
#end
#end
        return cloneEntity;
    }
    
    @Override
    public List<${originTable}> afterRetrieve(List ents) {
    	if (ents == null || ents.isEmpty()) {
            return ents;
        }
        List<${originTable}> newList = new ArrayList(ents.size());
#if(${originTable} == ${secTable})
		for(Object ent : ents){
			if(ent == null){
				continue;
			}
			${originTable} entity = ((${originTable})ent);
			${originTable} cloneEntity = (${originTable})entity.clone();
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()} && !${securityColumn.isLastQry()})
			// sec_${co}
			if (StringUtils.isNotBlank(cloneEntity.getSec_${co}())) {
            	cloneEntity.set${cu}(FoxSecurityHelper.decode(cloneEntity.getSec_${co}()));
				cloneEntity.setSec_${co}("");
#if(${securityColumn.isQry()})	
				cloneEntity.setQry_${co}("");
#end
#if(${securityColumn.isLastQry()})	
				cloneEntity.setLast_qry_${co}("");
#end
        	}
#end
#end		
        	newList.add(cloneEntity);	
		}        
#else
	    SQLFacadeBase sqlFacadeBase = EjbFacadeUtil.getFacadeLocal(SQLFacadeBase.class);
	    QueryParameters parameters = new QueryParameters(false);
#set($pkColConditions = "")
#set($selPkColumns = "")
#set($resultPkKey = "")
#set($columnIndex = 0)
#foreach (${column} in ${tablePkColumns})
	#set($originColumn = ${column.getName()})
	#set($selPkColumns = $selPkColumns + $originColumn)
	#set($pkColConditions = $pkColConditions + "?")
	#set($resultPkKey = $resultPkKey + "result["+$columnIndex+"].toString()")
	#set($columnIndex = $columnIndex + 1)
	#if($foreach.hasNext)
		#set($selPkColumns = $selPkColumns + ",")
		#set($pkColConditions = $pkColConditions + ",")
		#set($resultPkKey = $resultPkKey + "+""-""+")
	#end
#end

#set($selColumns = $selPkColumns)
#foreach (${column} in ${securityColumns})
#if(!${column.isQry()} && !${column.isLastQry()})
#set($selColumns = $selColumns + ",")
#set($selColumns = $selColumns + ${column.getName()})
#end
#end
		String sql = "select ${selColumns} from ${secTable.toLowerCase()} where ($selPkColumns) in (";
		int index = 1;
		for (Object ent : ents){
			sql += "(${pkColConditions}),";
#foreach (${column} in ${tablePkColumns})
			parameters.addParameter(index++, ((${originTable})ent).get${column.getCapitalName()}());
#end
		}
		sql = sql.substring(0, sql.length()-1);
		sql += ") ";
		List<Object[]> results = sqlFacadeBase.getResultList(sql, parameters);
		Map<String, Object[]> matchingResultMap = new HashMap<>();
		if (results != null){
			for(Object[] result : results){
				matchingResultMap.put($resultPkKey, result);
			}
		}
		boolean encrypted = false;
		for (Object ent : ents){
			if (ent == null){
				continue;
			}
			${originTable} entity = ((${originTable})ent);
#set($resultSecColumnIndex = $columnIndex)
#set($entPkKey = "")
#foreach (${column} in ${tablePkColumns})
#set($entPkKey = $entPkKey + "entity.get${column.getCapitalName()}()")
#if($foreach.hasNext)
#set($entPkKey = $entPkKey + "+""-""+")
#end
#end
			Object[] secResult = matchingResultMap.get($entPkKey);	
			encrypted = secResult != null && secResult.length > 0;
			${originTable} cloneEntity = (${originTable})entity.clone();
#foreach (${securityColumn} in ${securityColumns})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#if(!${securityColumn.isQry()} && !${securityColumn.isLastQry()})
        	// sec_${cu.toLowerCase()}
        	if (encrypted && StringUtils.isNotBlank((String)secResult[$resultSecColumnIndex])) {
            	cloneEntity.set${cu}(FoxSecurityHelper.decode(secResult[$resultSecColumnIndex]));
        	}
#set($resultSecColumnIndex = $resultSecColumnIndex+1)
#end
#end
        	newList.add(cloneEntity);			
		}
			
#end
		return newList;
    }

    @Override
    public ${originTable} desensitize(${originTable} entity) {
#if(${originTable} == ${secTable})
		${originTable} cloneEntity = entity;
#else
		${originTable} cloneEntity = (${originTable})entity.clone();
#end 
#foreach (${securityColumn} in ${securityColumns})
#set($co = ${securityColumn.getOriginColumn()})
#set($cu = ${securityColumn.getOriginColumnCapitalName()})
#set($cc = ","+${securityColumn.getOriginColumn()}+",")
#if(!$securityColumn.isQry() && !$securityColumn.isLastQry())
		// sec_${co}
#if("ident" == ${co})        
        if (StringUtils.isNotBlank(cloneEntity.getIdent())) {
            cloneEntity.setIdent(FoxDesensitizedUtil.idCardNumByXR(cloneEntity.getIdent()));
        }
#elseif($cc1.contains(${cc}) || $cc1_1.contains(${cc}) || $cc1_2.contains(${cc}) || $cc1_3.contains(${cc})) 
        
#if((${originTable} == "Master" || ${originTable} == "Hmaster") && (${co} == "name" || ${co} == "fname" || ${co} == "lname"))
        if (Objects.equals(cloneEntity.getCat(), "F") && StringUtils.isNotBlank(cloneEntity.get${cu}())){
        	cloneEntity.set${cu}(FoxDesensitizedUtil.chineseName(cloneEntity.get${cu}()));
        } 
#elseif((${originTable} == "Guest") && ((${co} == "name" || ${co} == "fname" || ${co} == "lname")))
		if (Objects.equals(cloneEntity.getCls(), "F") && StringUtils.isNotBlank(cloneEntity.get${cu}())){
        	cloneEntity.set${cu}(FoxDesensitizedUtil.chineseName(cloneEntity.get${cu}()));
		}
#else
		if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
			cloneEntity.set${cu}(FoxDesensitizedUtil.chineseName(cloneEntity.get${cu}()));
		}
#end	      
#elseif($cc2.contains(${cc}) || $cc2_1.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.mobilePhone(cloneEntity.get${cu}()));
        }
#elseif($cc3.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.fixedPhone(cloneEntity.get${cu}()));
        }
#elseif($cc4.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.email(cloneEntity.get${cu}()));
        }
#elseif($cc5.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.address(cloneEntity.get${cu}()));
        }
#elseif($cc6.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.bankCard(cloneEntity.get${cu}()));
        }
#elseif($cc7.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}(FoxDesensitizedUtil.desensitize(cloneEntity.get${cu}(), 0));
        }
#elseif($cc8.contains(${cc})) 
        if (StringUtils.isNotBlank(cloneEntity.get${cu}())) {
            cloneEntity.set${cu}("");
        }
#else
		//TODO add logic
#end
#end
#end    
        return cloneEntity;
    }
    
    @Override
    public String[] getSecColumns() {
#set($index = 0)
#foreach (${securityColumn} in ${securityColumns})
#if(!${securityColumn.isQry()} && !${securityColumn.isLastQry()})
#set($index = $index+1)
#end
#end
#if($index == 0)
		return null;
#else
		String[] secColumns = new String[$index];
#set($index = 0)
#foreach (${securityColumn} in ${securityColumns})
#if(!$securityColumn.isQry() && !$securityColumn.isLastQry())
#set($co = ${securityColumn.getOriginColumn()})
		secColumns[$index] = "sec_$co";
#set($index = $index+1)
#end    
#end  	
    	return secColumns;
#end
    }
    
    @Override
    public String[] getQryColumns() {
#set($index = 0)
#foreach (${securityColumn} in ${securityColumns})
#if(${securityColumn.isQry()})
#set($index = $index+1)
#end
#end
#if($index == 0)
		return null;
#else
		String[] qryColumns = new String[$index];
#set($index = 0)
#foreach (${securityColumn} in ${securityColumns})
#if(${securityColumn.isQry()})
#set($co = ${securityColumn.getOriginColumn()})
		qryColumns[$index] = "qry_$co";
#set($index = $index+1)
#end    
#end  	
    	return qryColumns;
#end
    }
    
    /**
     * 创建初始sec
     *
     */
    @Override
    public ${secTable} createSecEntity(Serializable pk){
		${secTable} secent = new ${secTable}();
        secent.setCby(SessionUtils.getEmpno());
        secent.setChanged(new Date()); 
    	
#if($tablePkColumns.size() == 1)
        secent.set$tablePk.getCapitalName()(($tablePk.getJavaClass())pk);
#elseif($tablePkColumns.size() > 1)
        ${secTable}_PK secpk =  (${secTable}_PK)pk;
#foreach (${column} in ${tablePkColumns})
        secent.set$column.getCapitalName()(secpk.get$column.getCapitalName()());
#end
#end
    	return secent;
    }
    
    @Override
    public Map<String, Object> pkToMap(Serializable pk){
	    Map<String, Object> pkMap = new HashMap($tablePkColumns.size());
#if($tablePkColumns.size() == 1)
		pkMap.put("$tablePk", pk);
#elseif($tablePkColumns.size() > 1)
        ${originTable}_PK entityPk = (${originTable}_PK)pk;
#foreach (${column} in ${tablePkColumns})
		pkMap.put("${column.getName()}", entityPk.get${column.getCapitalName()}());
#end
#end
		return pkMap;
    }
}
